import Head from "next/head";
import Image from "next/image";
import localFont from 'next/font/local'; // Import localFont module

import styles from "@/styles/Home.module.css";

// Define Geist Sans local font
const geistSans = localFont({
  src: [
    {
      path: '../public/fonts/Geist-Regular.woff2', // Adjust filename if different
      weight: '400',
      style: 'normal',
    },
    {
      path: '../public/fonts/Geist-Medium.woff2',
      weight: '500',
      style: 'normal',
    },
    {
      path: '../public/fonts/Geist-SemiBold.woff2',
      weight: '600',
      style: 'normal',
    },
    {
      path: '../public/fonts/Geist-Bold.woff2',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: "--font-geist-sans", // Use CSS variable
});

// Define Geist Mono local font
const geistMono = localFont({
  src: [
    {
      path: '../public/fonts/GeistMono-Regular.woff2', // Adjust filename if different
      weight: '400',
      style: 'normal',
    },
    {
      path: '../public/fonts/GeistMono-Medium.woff2',
      weight: '500',
      style: 'normal',
    },
  ],
  variable: "--font-geist-mono", // Use CSS variable
});

export default function Home() {
  return (
    // Apply the font variables to your HTML or body element
    // For example, in your root layout (e.g., pages/_app.js or app/layout.js)
    // You can add className={`${geistSans.variable} ${geistMono.variable}`} to the <html> tag
    <div className={`${geistSans.className} ${geistMono.className}`}>
      <Head>
        <title>Abraham of London</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {/* Your existing content */}
        <h1>Welcome to Abraham of London</h1>
        <p>This text uses Geist Sans.</p>
        <p style={{ fontFamily: 'var(--font-geist-mono)' }}>This text uses Geist Mono.</p>
      </main>
    </div>
  );
}
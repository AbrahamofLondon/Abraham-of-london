//components/DateFormatter.tsximport*asReactfrom"react";import{formatasdfFormat,parseISO,isValidasisValidDate}from"date-fns";importtype{Locale}from"date-fns";interfaceDateFormatterProps{/**ISOstring(preferred),timestamp(ms),orDate*/dateString:string|number|Date;className?:string;/**date-fnsformatstring(default'PPP')*/pattern?:string;/**Optionaldate-fnslocale,e.g.import{enGB}from'date-fns/locale'*/locale?:Locale;/***Howtopopulatethe<timedateTime>attribute:*-'iso'=>useparsedDate.toISOString()(default)*-'input'=>usetheoriginalstringifitlooksISO-ish,elseISO*-false=>omittheattribute*/dateTimeAttr?:"iso"|"input"|false;}exportdefaultfunctionDateFormatter({dateString,className,pattern="PPP",locale,dateTimeAttr="iso",}:DateFormatterProps){const{formatted,dateTime}=React.useMemo(()=>{//NormalizetoDateletd:Date|null=null;if(dateStringinstanceofDate){d=isValidDate(dateString)?dateString:null;}elseif(typeofdateString==="number"){consttmp=newDate(dateString);d=isValidDate(tmp)?tmp:null;}elseif(typeofdateString==="string"){//PreferstrictISOparse;ifinvalid,fallbacktoDate.parseconstiso=parseISO(dateString);d=isValidDate(iso)?iso:(()=>{constt=Date.parse(dateString);consttmp=Number.isNaN(t)?null:newDate(t);returntmp&&isValidDate(tmp)?tmp:null;})();}//Ifvaliddate,format;elsefallbacktooriginaltextif(d){letout="";try{out=dfFormat(d,pattern,locale?{locale}:undefined);}catch{//Pattern/localeerror:safefallback(YYYY-MM-DD)out=d.toISOString().slice(0,10);}letdt:string|undefined;if(dateTimeAttr==="iso")dt=d.toISOString();elseif(dateTimeAttr==="input"){constlooksIso=typeofdateString==="string"&&/^\d{4}-\d{2}-\d{2}/.test(dateString);dt=looksIso?dateString:d.toISOString();}//false=>undefinedreturn{formatted:out,dateTime:dt};}return{formatted:String(dateString),dateTime:undefined};},[dateString,pattern,locale,dateTimeAttr]);return(<timedateTime={dateTime}className={className}>{formatted}</time>);}
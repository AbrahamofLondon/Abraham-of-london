'use client'

import { motion } from 'framer-motion'
import { useState } from 'react'
import Image from 'next/image'
import { Project, featuredProjects, allProjects } from '@/data/projects'

export default function ProjectsShowcase() {
  const [showAll, setShowAll] = useState(false)
  const [activeFilter, setActiveFilter] = useState('All')

  const categories = ['All', ...new Set(allProjects.map(p => p.category))]
  const displayedProjects = showAll ? allProjects : featuredProjects
  const filteredProjects = activeFilter === 'All'
    ? displayedProjects
    : displayedProjects.filter(p => p.category === activeFilter)

  return (
    <section id="projects" className="py-24 bg-black/90 backdrop-blur-sm">
      <div className="container mx-auto px-4 max-w-6xl">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-serif font-bold text-white mb-6">
            Selected <span className="text-transparent bg-clip-text bg-gradient-to-r from-softGold to-cream">Works</span>
          </h2>
          <p className="text-lg md:text-xl text-white/80 max-w-3xl mx-auto mb-8">
            Premium projects delivering exceptional results for luxury brands worldwide
          </p>

          {/* Filter Buttons */}
          <div className="flex flex-wrap justify-center gap-3 mb-8" role="group" aria-label="Filter projects by category">
            {categories.map(category => {
              const active = activeFilter === category
              return (
                <button
                  key={category}
                  onClick={() => setActiveFilter(category)}
                  className={
                    active
                      ? "px-4 py-2 rounded-full text-sm font-medium bg-cream text-black shadow focus:outline-none focus-visible:ring-2 focus-visible:ring-cream/70"
                      : "px-4 py-2 rounded-full text-sm font-medium bg-white/10 text-white/90 hover:bg-white/15 focus:outline-none focus-visible:ring-2 focus-visible:ring-white/60"
                  }
                  aria-pressed={active}
                >
                  {category}
                </button>
              )
            })}
          </div>
        </motion.div>

        {/* Projects Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredProjects.map((project, index) => (
            <ProjectCard key={project.id} project={project} index={index} />
          ))}
        </div>

        {/* Show More/Less Button */}
        {allProjects.length > featuredProjects.length && (
          <div className="text-center mt-16">
            <button
              onClick={() => setShowAll(!showAll)}
              className="px-8 py-3 rounded-full border border-white/20 text-white hover:bg-white/10 transition-colors focus:outline-none focus-visible:ring-2 focus-visible:ring-white/60"
            >
              {showAll ? 'Show Less' : 'Show All Projects'}
            </button>
          </div>
        )}
      </div>
    </section>
  )
}

function ProjectCard({ project, index }: { project: Project; index: number }) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
      viewport={{ once: true, margin: "-100px" }}
      className="group relative overflow-hidden rounded-xl border border-white/12 hover:border-white/30 transition-all duration-500 hover:shadow-lg hover:shadow-black/30 focus-within:ring-2 focus-within:ring-white/60"
    >
      <div className="aspect-video relative overflow-hidden">
        <Image
          src={project.imageUrl}
          alt={project.title}
          fill
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
          className="object-cover transition-transform duration-700 group-hover:scale-105"
          priority={index < 3}
        />
        {/* Stronger readable overlay on hover */}
        <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/35 to-transparent opacity-100 transition-opacity duration-500" />
      </div>

      <div className="p-6">
        <div className="flex justify-between items-start mb-2">
          <h3 className="text-xl font-bold text-white group-hover:text-cream transition-colors">
            {project.title}
          </h3>
          <span className="text-sm text-cream/90 whitespace-nowrap ml-2">
            {project.year}
          </span>
        </div>

        <p className="text-white/85 mb-4 line-clamp-2">{project.description}</p>

        <div className="flex flex-wrap gap-2 mb-4">
          {project.tags.map(tag => (
            <span
              key={tag}
              className="text-xs px-2 py-1 bg-white/10 rounded-full text-white/90"
            >
              {tag}
            </span>
          ))}
        </div>

        {project.projectUrl && (
          <a
            href={project.projectUrl}
            target="_blank"
            rel="noopener noreferrer"
            className="absolute inset-0 z-10"
            aria-label={`View ${project.title} project (opens in new tab)`}
          />
        )}

        <div className="text-xs text-white/70 mt-2">
          Client: <span className="text-white/85">{project.client}</span>
        </div>
      </div>
    </motion.div>
  )
}

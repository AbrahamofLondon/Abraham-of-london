# ────────────────────────────────────────────────────────────
# Build
# ────────────────────────────────────────────────────────────
[build]
  command = "npm run build"
  publish = ".next"

  [build.environment]
    NODE_VERSION = "20"
    NEXT_TELEMETRY_DISABLED = "1"
    NEXT_PUBLIC_SITE_URL = "https://www.abrahamoflondon.org"
    CI_LAX = "1"
    NO_SLASH_OPACITY_MODE = "fix"

# Production-only env
[context.production.environment]
  NODE_ENV = "production"

# ────────────────────────────────────────────────────────────
# Functions (Resend + JSX emails)
# ────────────────────────────────────────────────────────────
[functions]
  node_bundler = "esbuild"
  directory = "netlify/functions"
  external_node_modules = ["resend"]
  included_files = ["netlify/emails/**"]

# Next.js runtime
[[plugins]]
  package = "@netlify/plugin-nextjs"

# Lighthouse – run ONLY on production deploys
# (No invalid "fail_build". Use supported inputs below.)
[[context.production.plugins]]
  package = "@netlify/plugin-lighthouse"

  # What to audit (relative paths off the deployed URL)
  [[context.production.plugins.inputs.audits]]
    path = "/"
    output_path = "reports/home.html"

  [[context.production.plugins.inputs.audits]]
    path = "/blog"
    output_path = "reports/blog.html"

  # Score thresholds (deploy will fail if below)
  [context.production.plugins.inputs.thresholds]
    performance = 0.9
    accessibility = 0.9
    best-practices = 0.9
    seo = 0.9

  # Global settings for Lighthouse
  [context.production.plugins.inputs.settings]
    chromeFlags = "--no-sandbox"

  # Whether to fail the deploy on thresholds (true/false)
  # Set to true when you’re ready to enforce budgets.
  [context.production.plugins.inputs]
    fail_deploy_on_score_thresholds = false

# ────────────────────────────────────────────────────────────
# Legacy PDF aliases → serve the new files directly (200 rewrites)
# ────────────────────────────────────────────────────────────
[[redirects]]
  from = "/downloads/fathering-without-fear.pdf"
  to   = "/downloads/Fathering_Without_Fear.pdf"
  status = 200

[[redirects]]
  from = "/downloads/fathering-without-fear-mobile.pdf"
  to   = "/downloads/Fathering_Without_Fear_Teaser-Mobile.pdf"
  status = 200

[[redirects]]
  from = "/downloads/Fathering_Without_Fear.pdf"
  to   = "/downloads/Fathering_Without_Fear.pdf"
  status = 200

# ────────────────────────────────────────────────────────────
# Brand domains → 301 root to Ventures; everything else 410
# ────────────────────────────────────────────────────────────
[[redirects]]
  from = "/"
  to   = "https://www.abrahamoflondon.org/ventures?brand=endureluxe"
  status = 301
  conditions = { Host = ["endureluxe.com", "www.endureluxe.com"] }

[[redirects]]
  from = "/*"
  to   = "/410.html"
  status = 410
  force = true
  conditions = { Host = ["endureluxe.com", "www.endureluxe.com"] }

[[redirects]]
  from = "/"
  to   = "https://www.abrahamoflondon.org/ventures?brand=alomarada"
  status = 301
  conditions = { Host = ["alomarada.com", "www.alomarada.com"] }

[[redirects]]
  from = "/*"
  to   = "/410.html"
  status = 410
  force = true
  conditions = { Host = ["alomarada.com", "www.alomarada.com"] }

# ────────────────────────────────────────────────────────────
# Canonical host redirects (apex → www). 
# NOTE: do NOT redirect Netlify preview host; Lighthouse needs it.
# ────────────────────────────────────────────────────────────
[[redirects]]
  from = "/*"
  to   = "https://www.abrahamoflondon.org/:splat"
  status = 301
  force  = true
  conditions = { Host = ["abrahamoflondon.org"] }

# ────────────────────────────────────────────────────────────
# Headers
# ────────────────────────────────────────────────────────────
[[headers]]
  for = "/*"
  [headers.values]
    Strict-Transport-Security = "max-age=63072000; includeSubDomains; preload"
    X-Content-Type-Options    = "nosniff"
    Referrer-Policy           = "strict-origin-when-cross-origin"
    X-Frame-Options           = "SAMEORIGIN"
    Permissions-Policy        = "camera=(), microphone=(), geolocation=()"

[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=604800"

[[headers]]
  for = "/downloads/*.pdf"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/downloads/fathering-without-fear.pdf"
  [headers.values]
    Cache-Control = "no-store"

[[headers]]
  for = "/assets/images/downloads/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

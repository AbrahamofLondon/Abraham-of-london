'use client'

import { motion } from 'framer-motion'
import { useState } from 'react'
import Image from 'next/image'
import { Project, featuredProjects, allProjects } from '@/data/projects'

export default function ProjectsShowcase() {
  const [showAll, setShowAll] = useState(false)
  const [activeFilter, setActiveFilter] = useState('All')

  // Get unique categories
  const categories = ['All', ...new Set(allProjects.map(p => p.category))]

  // Filter projects
  const displayedProjects = showAll ? allProjects : featuredProjects
  const filteredProjects = activeFilter === 'All'
    ? displayedProjects
    : displayedProjects.filter(p => p.category === activeFilter)

  return (
    <section id="projects" className="py-24 bg-luxury-black/95 backdrop-blur-sm">
      <div className="container-custom">
        {/* Header */}
        <motion.div
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.8 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-serif font-bold text-white mb-6">
            Selected
            <span className="text-transparent bg-clip-text bg-gradient-to-r from-luxury-gold to-luxury-platinum">
              {' '}Works
            </span>
          </h2>
          <p className="text-xl text-gray-300 max-w-3xl mx-auto mb-8">
            Premium projects delivering exceptional results for luxury brands worldwide
          </p>

          {/* Filter Buttons */}
          <div className="flex flex-wrap justify-center gap-3 mb-8">
            {categories.map(category => (
              <button
                key={category}
                onClick={() => setActiveFilter(category)}
                className={`px-4 py-2 rounded-full text-sm font-medium transition-all ${
                  activeFilter === category
                    ? 'bg-luxury-gold text-luxury-black'
                    : 'bg-white/5 text-gray-300 hover:bg-white/10'
                }`}
              >
                {category}
              </button>
            ))}
          </div>
        </motion.div>

        {/* Projects Grid */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
          {filteredProjects.map((project, index) => (
            <ProjectCard key={project.id} project={project} index={index} />
          ))}
        </div>

        {/* Show More/Less Button */}
        {allProjects.length > featuredProjects.length && (
          <div className="text-center mt-16">
            <button
              onClick={() => setShowAll(!showAll)}
              className="px-8 py-3 rounded-full border border-luxury-gold/30 text-luxury-gold hover:bg-luxury-gold/10 transition-colors"
            >
              {showAll ? 'Show Less' : 'Show All Projects'}
            </button>
          </div>
        )}
      </div>
    </section>
  )
}

// Extracted Project Card Component
function ProjectCard({ project, index }: { project: Project; index: number }) {
  return (
    <motion.div
      initial={{ opacity: 0, y: 30 }}
      whileInView={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: index * 0.1 }}
      viewport={{ once: true, margin: "-100px" }}
      className="group relative overflow-hidden rounded-xl border border-white/10 hover:border-luxury-gold/30 transition-all duration-500 hover:shadow-lg hover:shadow-luxury-gold/10"
    >
      <div className="aspect-video relative overflow-hidden">
        <Image
          src={project.imageUrl}
          alt={project.title}
          fill
          sizes="(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw"
          className="object-cover transition-transform duration-700 group-hover:scale-105"
          priority={index < 3} // Only prioritize first 3 images
        />
        <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
      </div>

      <div className="p-6">
        <div className="flex justify-between items-start mb-2">
          <h3 className="text-xl font-bold text-white group-hover:text-luxury-gold transition-colors">
            {project.title}
          </h3>
          <span className="text-sm text-luxury-gold whitespace-nowrap ml-2">
            {project.year}
          </span>
        </div>

        <p className="text-gray-300 mb-4 line-clamp-2">{project.description}</p>

        <div className="flex flex-wrap gap-2 mb-4">
          {project.tags.map(tag => (
            <span
              key={tag}
              className="text-xs px-2 py-1 bg-white/5 rounded-full text-gray-300"
            >
              {tag}
            </span>
          ))}
        </div>

        {project.projectUrl && (
          <a
            href={project.projectUrl}
            target="_blank"
            rel="noopener noreferrer"
            className="absolute inset-0 z-10"
            aria-label={`View ${project.title} project`}
          />
        )}

        <div className="text-xs text-gray-500 mt-2">
          Client: <span className="text-gray-400">{project.client}</span>
        </div>
      </div>
    </motion.div>
  )
}